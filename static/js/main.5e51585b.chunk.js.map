{"version":3,"sources":["Game/Field/Cell/cell.js","Game/Field/field.js","Game/game.js","App.js","reportWebVitals.js","index.js"],"names":["Cell","x","y","width","isAlive","this","pos","context","document","getElementById","getContext","fillStyle","fillRect","RULE_ORIGINAL","id","survive","revive","RULE_1357_1357","RULE_3_3","RULE_13_3","RULE_34_3","RULE_35_3","RULE_2_3","RULE_24_3","RULE_245_3","RULE_125_36","Field","rows","cols","rule","field","createField","setRule","console","log","Array","i","length","j","draw","setState","Math","random","newField","row","col","counterAlive","new_i","new_j","mod","ruleSurvive","counterAliveNeigbours","includes","n","m","PrettoSlider","withStyles","root","color","height","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","top","background","track","borderRadius","rail","Slider","CANVAS_WIDTH","CANVAS_HEIGHT","Game","props","intervalID","state","mouseDown","resolution","isRunning","generationCount","speed","setInterval","nextStep","clearInterval","nextGeneration","setRandomPopulation","ceil","setTimeout","e","canvas","getMousePos","floor","reviveCell","val","stop","animation","evt","rect","getBoundingClientRect","clientX","clientY","parseInt","target","value","className","Button","variant","disabled","onClick","randomPopulation","clear","onChange","switchRule","valueLabelDisplay","aria-label","defaultValue","min","max","step","handleResolutionChange","handleSpeedChange","onMouseDown","allowDrawOnCanvas","onMouseUp","onMouseMove","mouseMove","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5e51585b.chunk.js","sourcesContent":["/*\r\nThis class handles the behavior of a Cell for the field\r\n*/\r\n\r\nexport default class Cell{\r\n    constructor(x,y,width,isAlive=false, wasAlive=false){\r\n        this.pos={x:x,y:y};\r\n        this.width=width;\r\n        this.x = x;\r\n        this.isAlive=isAlive; //True=red, False=blue\r\n    }\r\n\r\n    //Sets the State of the Cell to a given state\r\n    setState(isAlive){\r\n        this.isAlive=isAlive;\r\n    }\r\n\r\n    //Sets the Cell to Alicw\r\n    revive(){\r\n        this.isAlive=true;\r\n    }\r\n\r\n    //Draws the Rectangle on the Canvas\r\n    draw(){\r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var context = canvas.getContext(\"2d\");\r\n        if(this.isAlive){\r\n            context.fillStyle=\"crimson\";\r\n        } else {\r\n            context.fillStyle=\"lightblue\";    \r\n        }\r\n        \r\n        context.fillRect(this.pos.x,this.pos.y,this.width,this.width); \r\n    }\r\n}","/**\r\n * Thisl File hanldes the Drawing of the Field for the Game of Life\r\n */\r\nimport Cell from \"./Cell/cell\";\r\n\r\nconst RULE_ORIGINAL={id:0, survive:[2,3], revive:[3]};\r\nconst RULE_1357_1357={id:1, survive:[1,3,5,7], revive:[1,3,5,7]};\r\nconst RULE_3_3={id:2, survive:[3], revive:[3]};\r\nconst RULE_13_3={id:3, survive:[1,3], revive:[3]};\r\nconst RULE_34_3={id:4, survive:[3,4], revive:[3]};\r\nconst RULE_35_3={id:5, survive:[3,5], revive:[3]};\r\nconst RULE_2_3={id:6, survive:[2], revive:[3]};\r\nconst RULE_24_3={id:7, survive:[2,4], revive:[3]};\r\nconst RULE_245_3={id:8, survive:[2,4,5], revive:[3]};\r\nconst RULE_125_36={id:9, survive:[1,2,5], revive:[3,6]};\r\n\r\n\r\nexport default class Field{\r\n    constructor(rows,cols,width,rule=0){\r\n        this.field = this.createField(rows,cols,width);\r\n        this.rows=rows;\r\n        this.cols=cols;\r\n        this.width=width;\r\n        this.setRule(rule);\r\n    }\r\n\r\n    setRule(rule){\r\n        console.log(rule);\r\n        switch (rule) {\r\n            case RULE_ORIGINAL.id:\r\n                this.rule=RULE_ORIGINAL;\r\n                break;\r\n            case RULE_1357_1357.id:\r\n                this.rule=RULE_1357_1357;\r\n                break;\r\n            case RULE_3_3.id:\r\n                this.rule=RULE_3_3;\r\n                break;\r\n            case RULE_13_3.id:\r\n                this.rule=RULE_13_3;\r\n                break;\r\n            case RULE_34_3.id:\r\n                this.rule=RULE_34_3;\r\n                break;\r\n            case RULE_35_3.id:\r\n                this.rule=RULE_35_3;\r\n                break;\r\n            case RULE_2_3.id:\r\n                this.rule=RULE_2_3;\r\n                break;\r\n            case RULE_24_3.id:\r\n                this.rule=RULE_24_3;\r\n                break;\r\n            case RULE_245_3.id:\r\n                this.rule=RULE_245_3;\r\n                break;\r\n            case RULE_125_36.id:\r\n                this.rule=RULE_125_36;\r\n                break;\r\n            default:\r\n                this.rule=RULE_ORIGINAL;\r\n                break;\r\n        }\r\n    }\r\n   \r\n    //Creates the initial Field\r\n    createField(rows,cols,width){\r\n        let field = new Array(rows);\r\n        for(let i=0;i<field.length;i++){\r\n            field[i]= new Array(cols);\r\n            for(let j=0;j<field[i].length;j++){\r\n                field[i][j]=new Cell(i*width,j*width,width,false);\r\n            }\r\n        }\r\n        return field;\r\n    }\r\n\r\n    //Sets the fiven Cell to Alive and Redraws the Cell\r\n    reviveCell(i,j){\r\n        this.field[i][j].revive();\r\n        this.field[i][j].draw();\r\n    } \r\n\r\n    //Generates a Random Population\r\n    setRandomPopulation(){\r\n        for(let i=0;i<this.field.length;i++){\r\n            for(let j=0;j<this.field[0].length;j++){\r\n                this.field[i][j].setState(Math.random()>0.5);\r\n            }\r\n        }\r\n        this.draw();\r\n    }\r\n\r\n    //Computes the Next Generation and displays it\r\n    nextGeneration(){\r\n        let newField = this.createField(this.rows,this.cols,this.width);\r\n        for(let i=0;i<this.field.length;i++){\r\n            for(let j=0;j<this.field[0].length;j++){\r\n                if(this.survive(i, j)){\r\n                    newField[i][j].setState(true);\r\n                    continue;\r\n                } \r\n                newField[i][j].setState(false);\r\n            }\r\n        }\r\n        this.field=newField;\r\n        this.draw();\r\n    }\r\n\r\n    \r\n    //Draws the hole field\r\n    draw(){\r\n        for(let i=0;i<this.field.length;i++){\r\n            for(let j=0;j<this.field[0].length;j++){\r\n                this.field[i][j].draw();\r\n            }\r\n        }\r\n    }\r\n\r\n    //Computes if a fiven Cell is gonna Survive in the next Generation\r\n    survive(row,col){\r\n        let counterAlive=0;\r\n        let new_i=0;\r\n        let new_j=0;\r\n        for(let i=row-1;i<=row+1;i++){\r\n            new_i=i;\r\n            for(let j=col-1;j<=col+1;j++){\r\n                new_j=j;\r\n                if(new_i===row && new_j===col) continue;\r\n                if(i<0 || i>this.field.length-1){\r\n                    new_i = this.mod(i,this.field.length);\r\n                }\r\n                if(j<0 || j>this.field[0].length-1){\r\n                    new_j = this.mod(j,this.field[0].length);\r\n                }\r\n                if(this.field[new_i][new_j].isAlive) counterAlive++;\r\n            }\r\n        }\r\n        return this.ruleSurvive(this.field[row][col].isAlive, counterAlive);\r\n    }\r\n\r\n    //Checks if the Cell is gone live in the next generation based on the World rule\r\n    ruleSurvive(isAlive, counterAliveNeigbours){\r\n        if(counterAliveNeigbours===0) return false;\r\n        if(isAlive){\r\n            return this.rule.survive.includes(counterAliveNeigbours);\r\n        } else {\r\n            return this.rule.revive.includes(counterAliveNeigbours);\r\n        }\r\n    }\r\n\r\n    //Moludo\r\n    mod(n, m) {\r\n        return ((n % m) + m) % m;\r\n    }\r\n}","import React from 'react';\r\nimport \"./game.css\";\r\nimport Field from \"./Field/field\";\r\nimport { Button, Slider } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n  Code for the custom slider look\r\n  * */ \r\n function ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n  \r\n    return (\r\n      <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n        {children}\r\n      </Tooltip>\r\n    );\r\n  }\r\n  ValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n  };\r\n\r\n  const PrettoSlider = withStyles({\r\n    root: {\r\n      color: 'gray',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n      top: 4,\r\n      '& *': {\r\n        background: 'transparent',\r\n        color: 'red',\r\n      },\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n/**End Slide Code */\r\n\r\n\r\nconst CANVAS_WIDTH=900;\r\nconst CANVAS_HEIGHT=380;\r\nconst DEFAULT_RESOLUTION=10;\r\nconst DEFAULT_SPEED=100;\r\n\r\n//Rules RULE_'Numbers of living neighbours required to survive'_'Number of living Neighbours to get retrived'\r\n// E.g. RULE_23_3 Means: \r\n//Living Cells with 2 OR 3 Living Neighbours gonna Survive\r\n//Dead Cells with 3 Living Neighbours gonna Live in the next generation\r\nconst RULE_ORIGINAL=0; //RULE_23_3\r\nconst RULE_1357_1357=1;\r\nconst RULE_3_3=2;\r\nconst RULE_13_3=3;\r\nconst RULE_34_3=4;\r\nconst RULE_35_3=5;\r\nconst RULE_2_3=6;\r\nconst RULE_24_3=7;\r\nconst RULE_245_3=8;\r\nconst RULE_125_36=9;\r\n\r\nexport default class Game extends React.Component{\r\n    intervalID=0;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            field: new Field(CANVAS_WIDTH/DEFAULT_RESOLUTION,CANVAS_HEIGHT/DEFAULT_RESOLUTION,DEFAULT_RESOLUTION, RULE_ORIGINAL),\r\n            mouseDown: false,\r\n            resolution: DEFAULT_RESOLUTION,\r\n            isRunning:false,\r\n            generationCount:0, \r\n            speed: DEFAULT_SPEED,\r\n            rule: RULE_ORIGINAL,\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.state.field.draw();\r\n    }\r\n\r\n    //Starts the Game of Life and computes and displays the generation every this.state.speed ms\r\n    animation(){\r\n        this.setState({isRunning:true});\r\n        this.intervalID = setInterval(() => {\r\n            this.nextStep();\r\n        },this.state.speed);\r\n    }\r\n\r\n      //Stops the the Animation\r\n      stop(){\r\n        this.setState({isRunning:false});\r\n        clearInterval(this.intervalID);\r\n    } \r\n\r\n    //Calculates the next step for the Game\r\n    nextStep(){\r\n        this.state.field.nextGeneration();\r\n        this.setState({generationCount:this.state.generationCount+1});\r\n    }\r\n\r\n    //Generates a random population\r\n    randomPopulation(){\r\n        this.state.field.setRandomPopulation();\r\n    }\r\n\r\n    //Resets the Game of Life to the initial state\r\n    clear(){\r\n        this.setState({generationCount:0,field: new Field(Math.ceil(CANVAS_WIDTH/this.state.resolution),Math.ceil(CANVAS_HEIGHT/this.state.resolution),this.state.resolution, this.state.rule)});\r\n        setTimeout(() => {\r\n            this.state.field.draw();\r\n        },10);\r\n    }\r\n\r\n    //Handles the Mousemovment over the Canvas (Adds red Cells)\r\n    mouseMove(e){\r\n        if(!this.state.mouseDown){\r\n            return;\r\n        } \r\n        var canvas = document.getElementById(\"2d-plane\");\r\n        var pos = this.getMousePos(canvas, e);\r\n        let i= Math.floor(pos.x/(this.state.resolution));\r\n        let j= Math.floor(pos.y/(this.state.resolution));\r\n        this.state.field.reviveCell(i,j);\r\n    }\r\n\r\n     //Handles the Resolution Change (Slider) and creates a new Field\r\n     handleResolutionChange(e, val){\r\n        this.setState({resolution: val, field: new Field(Math.ceil(CANVAS_WIDTH/val),Math.ceil(CANVAS_HEIGHT/val),val, this.state.rule)});\r\n        setTimeout(() => {\r\n            this.state.field.draw();\r\n        },10);\r\n    }\r\n\r\n   //Handles the speed change for the iteration timer\r\n    handleSpeedChange(e, val){\r\n        this.setState({speed: val});\r\n        if(this.state.isRunning){\r\n            this.stop();\r\n            this.animation();\r\n        }\r\n    }\r\n\r\n    //Gets the Mouse position on the Canvas\r\n    getMousePos(canvas, evt) {\r\n        var rect = canvas.getBoundingClientRect();\r\n        return {\r\n        x: evt.clientX - rect.left,\r\n        y: evt.clientY - rect.top\r\n        };\r\n    }\r\n\r\n    //Sets the Variable on Mouse Down to true/ Mouse UP to false\r\n    allowDrawOnCanvas(){\r\n        this.setState({mouseDown: !this.state.mouseDown})\r\n    }\r\n\r\n    //Handles the Switch of the Rules for the Gamej\r\n    switchRule(e){\r\n      this.setState({rule: parseInt(e.target.value)});\r\n      this.state.field.setRule(parseInt(e.target.value));\r\n    }\r\n\r\n    render(){\r\n        const {isRunning, generationCount}= this.state;\r\n        return(\r\n            <div className=\"game\">\r\n                <h1>Game Of Life</h1>\r\n                <Button variant=\"outlined\" disabled={isRunning} onClick={() => this.animation()}>Animation</Button>\r\n                <Button variant=\"outlined\" color=\"secondary\" onClick={() => this.stop()}>Stop</Button>\r\n                <Button variant=\"outlined\" disabled={isRunning} onClick={() => this.nextStep()}>Next Step</Button>\r\n                <Button variant=\"outlined\" onClick={() => this.randomPopulation()}>Random Population</Button>\r\n                <Button variant=\"outlined\" onClick={() => this.clear()}>Clear</Button>\r\n                <select className=\"select-css\" onChange={(e) => this.switchRule(e)}>\r\n                    <option value={RULE_ORIGINAL}>Original Rule (23/2)</option>\r\n                    <option value={RULE_1357_1357}>Copy World 1357/1357</option>\r\n                    <option value={RULE_3_3}>3/3</option>\r\n                    <option value={RULE_13_3}>13/3</option>\r\n                    <option value={RULE_34_3}>34/3</option>\r\n                    <option value={RULE_35_3}>35/3</option>\r\n                    <option value={RULE_2_3}>2/3</option>\r\n                    <option value={RULE_24_3}>23/3</option>\r\n                    <option value={RULE_245_3}>245/3</option>\r\n                    <option value={RULE_125_36}>125/36</option>\r\n                </select>\r\n                <div className=\"game__resolution__slider\">\r\n                    <div className=\"game__resolution__slider__label\">\r\n                        <h4>Resolution</h4>\r\n                        <PrettoSlider disabled={isRunning} valueLabelDisplay=\"off\"\r\n                        aria-label=\"pretto slider\" defaultValue={10} min={5} max={40} step={5}\r\n                        onChange={(e, val) => this.handleResolutionChange(e, val)}  \r\n                        />\r\n                    </div>\r\n                    <div className=\"game__resolution__slider__label\">\r\n                    <h4>Computation Speed</h4>\r\n                    <PrettoSlider valueLabelDisplay=\"off\"\r\n                        aria-label=\"pretto slider\" defaultValue={DEFAULT_SPEED} min={30} max={1020} step={30}\r\n                        onChange={(e, val) => this.handleSpeedChange(e, val)}  \r\n                    />\r\n                    </div>\r\n                </div>\r\n                <h4>Iterations: {generationCount}</h4>\r\n                <canvas className=\"game_canvas__2dplane\" id=\"2d-plane\" width={CANVAS_WIDTH} height={CANVAS_HEIGHT}\r\n                    onMouseDown={ ()=>this.allowDrawOnCanvas()}\r\n                    onMouseUp={()=>this.allowDrawOnCanvas()}\r\n                    onMouseMove={(e) => this.mouseMove(e)}\r\n                ></canvas>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import './App.css';\nimport Game from \"./Game/game\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Game></Game>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}